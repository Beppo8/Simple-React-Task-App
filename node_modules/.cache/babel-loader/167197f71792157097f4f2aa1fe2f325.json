{"ast":null,"code":"var _jsxFileName = \"/home/beppo/Documentos/React/taskapp/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TaskBanner } from \"./components/TaskBanner\";\nimport { TaskRow } from \"./components/TaskRow\";\nimport { TaskCreator } from \"./components/TaskCreator\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\n\nfunction App() {\n  const [userName, setUserName] = useState(\"Beppo\");\n  const [taskItems, setTaskItems] = useState([{\n    name: \"Task One\",\n    done: false\n  }, {\n    name: \"Task Two\",\n    done: false\n  }, {\n    name: \"Task Three\",\n    done: true\n  }, {\n    name: \"Task Four\",\n    done: false\n  }]);\n  const [showCompleted, setshowCompleted] = useState(true);\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n\n    if (data != null) {\n      setTaskItems(JSON.parse(data));\n    } else {\n      setUserName(\"Beppo\");\n      setTaskItems([{\n        name: \"Task One\",\n        done: false\n      }, {\n        name: \"Task Two\",\n        done: false\n      }, {\n        name: \"Task Three\",\n        done: true\n      }, {\n        name: \"Task Four\",\n        done: false\n      }]);\n      setshowCompleted(true);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(taskItems));\n  }, [taskItems]);\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, {\n        name: taskName,\n        done: false\n      }]);\n    }\n  };\n\n  const toggleTask = task => setTaskItems(taskItems.map(t => t.name === task.name ? { ...t,\n    done: !t.done\n  } : t));\n\n  const taskTableRows = doneValue => taskItems.filter(task => task.done === doneValue).map(task => /*#__PURE__*/React.createElement(TaskRow, {\n    key: task.name,\n    task: task,\n    toggleTask: toggleTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TaskBanner, {\n    userName: userName,\n    taskItems: taskItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TaskCreator, {\n    callback: createNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Done\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, taskTableRows(false))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-secondary text-white text-center p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VisibilityControl, {\n    description: \"Completed Tasks\",\n    isChecked: showCompleted,\n    callback: checked => setshowCompleted(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), showCompleted && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Done\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, taskTableRows(true)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/beppo/Documentos/React/taskapp/src/App.js"],"names":["React","useState","useEffect","TaskBanner","TaskRow","TaskCreator","VisibilityControl","App","userName","setUserName","taskItems","setTaskItems","name","done","showCompleted","setshowCompleted","data","localStorage","getItem","JSON","parse","setItem","stringify","createNewTask","taskName","find","t","toggleTask","task","map","taskTableRows","doneValue","filter","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TaskBanner } from \"./components/TaskBanner\";\nimport { TaskRow } from \"./components/TaskRow\";\nimport { TaskCreator } from \"./components/TaskCreator\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\n\nfunction App() {\n  const [userName, setUserName] = useState(\"Beppo\");\n  const [taskItems, setTaskItems] = useState([\n    { name: \"Task One\", done: false },\n    { name: \"Task Two\", done: false },\n    { name: \"Task Three\", done: true },\n    { name: \"Task Four\", done: false }\n  ]);\n  const [showCompleted, setshowCompleted] = useState(true);\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n    if (data != null) {\n        setTaskItems(JSON.parse(data))\n    } else {\n          setUserName(\"Beppo\");\n          setTaskItems([\n              { name: \"Task One\", done: false },\n              { name: \"Task Two\", done: false },\n              { name: \"Task Three\", done: true },\n              { name: \"Task Four\", done: false }\n          ]);\n          setshowCompleted(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(taskItems));\n  }, [taskItems]);\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, { name: taskName, done: false }]);\n    }\n  };\n\n  const toggleTask = task =>\n    setTaskItems(\n      taskItems.map(t => (t.name === task.name ? { ...t, done: !t.done } : t))\n    );\n\n  const taskTableRows = doneValue =>\n    taskItems\n      .filter(task => task.done === doneValue)\n      .map(task => (\n        <TaskRow key={task.name} task={task} toggleTask={toggleTask} />\n      ));\n\n  return (\n    <div>\n      <TaskBanner userName={userName} taskItems={taskItems} />\n      <div className=\"container-fluid\">\n        <TaskCreator callback={createNewTask} />\n        <table className=\"table table-striped table-bordered\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Done</th>\n            </tr>\n          </thead>\n          <tbody>{taskTableRows(false)}</tbody>\n        </table>\n        <div className=\"bg-secondary text-white text-center p-2\">\n          <VisibilityControl\n            description=\"Completed Tasks\"\n            isChecked={showCompleted}\n            callback={checked => setshowCompleted(checked)}\n          />\n        </div>\n        {showCompleted && (\n          <table className=\"table table-striped table-bordered\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Done</th>\n              </tr>\n            </thead>\n            <tbody>{taskTableRows(true)}</tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}