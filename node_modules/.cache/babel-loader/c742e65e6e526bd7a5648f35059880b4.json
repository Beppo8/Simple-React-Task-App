{"ast":null,"code":"var _jsxFileName = \"/home/beppo/Documentos/React/taskapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TaskRow } from './components/TaskRow';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\nimport { VisibilityControl } from './components/VisibilityControl';\n\nfunction App() {\n  const [userName, setUserName] = useState('beppo');\n  const [taskItems, setTaskItems] = useState([{\n    name: 'Task One',\n    done: false\n  }, {\n    name: 'Task Two',\n    done: false\n  }, {\n    name: 'Task Three',\n    done: true\n  }, {\n    name: 'Task Four',\n    done: false\n  }]);\n  const [showCompleted, setShowCompleted] = useState(true);\n  useEffect(() => {\n    let data = localStorage.getItem('tasks');\n\n    if (data != null) {\n      setTaskItems(JSON.parse(data));\n    } else {\n      setUserName('Beppo Example');\n      setTaskItems([{\n        name: 'Task One Example',\n        done: false\n      }, {\n        name: 'Task Two Example',\n        done: false\n      }, {\n        name: 'Task Three Example',\n        done: true\n      }, {\n        name: 'Task Four Example',\n        done: false\n      }]);\n    }\n  }, []);\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, {\n        name: taskName,\n        done: false\n      }]);\n    }\n  };\n\n  const toggleTask = task => setTaskItems(taskItems.map(t => t.name === task.name ? { ...t,\n    done: !t.done\n  } : t));\n\n  const taskTableRows = doneValue => taskItems.filter(task => task.one === doneValue).map(task => /*#__PURE__*/React.createElement(TaskRow, {\n    task: task,\n    key: task.name,\n    toggleTask: toggleTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TaskBanner, {\n    userName: userName,\n    taskItems: taskItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TaskCreator, {\n    callback: createNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Done\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, taskTableRows(false))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-secondary-text-white text-center p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VisibilityControl, {\n    description: \"Completed Tasks\",\n    isChecked: showCompleted,\n    callback: checked => setShowCompleted(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), showCompleted && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Done\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, taskTableRows(true))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/beppo/Documentos/React/taskapp/src/App.js"],"names":["React","useState","useEffect","TaskRow","TaskBanner","TaskCreator","VisibilityControl","App","userName","setUserName","taskItems","setTaskItems","name","done","showCompleted","setShowCompleted","data","localStorage","getItem","JSON","parse","createNewTask","taskName","find","t","toggleTask","task","map","taskTableRows","doneValue","filter","one","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CACzC;AAACW,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GADyC,EAEzC;AAACD,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAFyC,EAGzC;AAACD,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAHyC,EAIzC;AAACD,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAJyC,CAAD,CAA1C;AAMA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;;AACA,QAAIF,IAAI,IAAI,IAAZ,EAAkB;AAChBL,MAAAA,YAAY,CAACQ,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAZ;AACD,KAFD,MAEO;AACLP,MAAAA,WAAW,CAAC,eAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,CACX;AAACC,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OADW,EAEX;AAACD,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAFW,EAGX;AAACD,QAAAA,IAAI,EAAE,oBAAP;AAA6BC,QAAAA,IAAI,EAAE;AAAnC,OAHW,EAIX;AAACD,QAAAA,IAAI,EAAE,mBAAP;AAA4BC,QAAAA,IAAI,EAAE;AAAlC,OAJW,CAAD,CAAZ;AAMD;AACF,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMQ,aAAa,GAAGC,QAAQ,IAAI;AAChC,QAAG,CAACZ,SAAS,CAACa,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACZ,IAAF,KAAWU,QAA/B,CAAJ,EAA8C;AAC5CX,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe;AAACE,QAAAA,IAAI,EAAEU,QAAP;AAAiBT,QAAAA,IAAI,EAAE;AAAvB,OAAf,CAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAMY,UAAU,GAAGC,IAAI,IACrBf,YAAY,CAACD,SAAS,CAACiB,GAAV,CAAcH,CAAC,IAAKA,CAAC,CAACZ,IAAF,KAAWc,IAAI,CAACd,IAAhB,GAAuB,EAAC,GAAGY,CAAJ;AAAOX,IAAAA,IAAI,EAAE,CAACW,CAAC,CAACX;AAAhB,GAAvB,GAA+CW,CAAnE,CAAD,CADd;;AAGA,QAAMI,aAAa,GAAIC,SAAD,IACtBnB,SAAS,CACRoB,MADD,CACQJ,IAAI,IAAIA,IAAI,CAACK,GAAL,KAAaF,SAD7B,EAECF,GAFD,CAEKD,IAAI,iBACP,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAqB,IAAA,GAAG,EAAEA,IAAI,CAACd,IAA/B;AAAqC,IAAA,UAAU,EAAEa,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADA;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEjB,QAAtB;AAAgC,IAAA,SAAS,EAAEE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEW,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,SAAS,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADH,CADD,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,aAAa,CAAC,KAAD,CADhB,CAPF,CAJF,eAgBE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,WAAW,EAAC,iBADd;AAEE,IAAA,SAAS,EAAEd,aAFb;AAGE,IAAA,QAAQ,EAAEkB,OAAO,IAAIjB,gBAAgB,CAACiB,OAAD,CAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,EAyBIlB,aAAa,iBACX;AAAO,IAAA,SAAS,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,aAAa,CAAC,IAAD,CADhB,CAPF,CA1BN,CADF;AA2CD;;AAED,eAAerB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TaskRow } from './components/TaskRow';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\nimport { VisibilityControl } from './components/VisibilityControl'\n\nfunction App() {\n\n  const [userName, setUserName] = useState('beppo');\n  const [taskItems, setTaskItems] = useState([\n    {name: 'Task One', done: false},\n    {name: 'Task Two', done: false},\n    {name: 'Task Three', done: true},\n    {name: 'Task Four', done: false},\n  ]);\n  const [showCompleted, setShowCompleted] = useState(true)\n\n  useEffect(() => {\n    let data = localStorage.getItem('tasks');\n    if (data != null) {\n      setTaskItems(JSON.parse(data));\n    } else {\n      setUserName('Beppo Example')\n      setTaskItems([\n        {name: 'Task One Example', done: false},\n        {name: 'Task Two Example', done: false},\n        {name: 'Task Three Example', done: true},\n        {name: 'Task Four Example', done: false},\n      ])\n    }\n  }, []);\n\n  const createNewTask = taskName => {\n    if(!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, {name: taskName, done: false}])\n    }\n  }\n\n  const toggleTask = task =>\n    setTaskItems(taskItems.map(t => (t.name === task.name ? {...t, done: !t.done} : t)))\n\n  const taskTableRows = (doneValue) => \n  taskItems\n  .filter(task => task.one === doneValue)\n  .map(task => (\n    <TaskRow task={task} key={task.name} toggleTask={toggleTask} />\n  ))\n\n  return (\n    <div className=\"App\">\n      <TaskBanner userName={userName} taskItems={taskItems} />\n\n      <TaskCreator callback={createNewTask} />\n      <table className=\"table table-striped table-bordered\" >\n       <thead>\n          <tr>\n            <th>Description</th>\n            <th>Done</th>\n          </tr>\n       </thead>\n        <tbody>\n          {taskTableRows(false)}\n        </tbody>\n      </table>\n\n      <div className=\"bg-secondary-text-white text-center p-2\">\n        <VisibilityControl\n          description=\"Completed Tasks\"\n          isChecked={showCompleted}\n          callback={checked => setShowCompleted(checked)}\n        />\n      </div>\n\n      {\n        showCompleted && (\n          <table className=\"table table-striped table-bordered\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Done</th>\n              </tr>\n            </thead>\n            <tbody>\n              {taskTableRows(true)}\n            </tbody>\n          </table>\n        )\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}